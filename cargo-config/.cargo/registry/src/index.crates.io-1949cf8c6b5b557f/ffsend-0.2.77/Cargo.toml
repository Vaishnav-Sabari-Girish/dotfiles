# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2018"
rust-version = "1.63.0"
name = "ffsend"
version = "0.2.77"
authors = ["Tim Visee <3a4fb3964f@sinenomine.email>"]
build = "build.rs"
exclude = [
    "/.github",
    "/contrib",
    "/pkg",
    "/res",
    "/*.yml",
    "/CONTRIBUTING.md",
    "/SECURITY.md",
]
autolib = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = """
Easily and securely share files from the command line.
A fully featured Send client."""
homepage = "https://timvisee.com/projects/ffsend"
readme = "README.md"
keywords = [
    "send",
    "firefox",
    "cli",
]
categories = [
    "authentication",
    "command-line-interface",
    "command-line-utilities",
    "cryptography",
    "network-programming",
]
license = "GPL-3.0"
repository = "https://gitlab.com/timvisee/ffsend"

[package.metadata.deb]
depends = "$auto, libssl1.1, ca-certificates, xclip"
extended-description = """
Easily and securely share files and directories from the command line through
a safe, private and encrypted link using a single simple command. Files are shared using the Send service and may be up to 2GB. Others are able to download these files with this tool, or through their web browser.

All files are always encrypted on the client, and secrets are never shared with the remote host. An optional password may be specified, and a default file lifetime of 1 (up to 20) download or 24 hours is enforced to ensure your stuff does not remain online forever. This provides a secure platform to share your files."""
license-file = [
    "LICENSE",
    "3",
]
maintainer-scripts = "pkg/deb"
priority = "standard"
section = "utility"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[[bin]]
name = "ffsend"
path = "src/main.rs"

[dependencies.chbs]
version = "0.1.0"

[dependencies.chrono]
version = "0.4"

[dependencies.clap]
version = "2.33"

[dependencies.colored]
version = "2.0"

[dependencies.derive_builder]
version = "0.10"

[dependencies.directories]
version = "4.0"

[dependencies.failure]
version = "0.1"

[dependencies.ffsend-api]
version = "0.7.3"
default-features = false

[dependencies.fs2]
version = "0.4"

[dependencies.lazy_static]
version = "1.4"

[dependencies.open]
version = "2"

[dependencies.openssl-probe]
version = "0.1"

[dependencies.pathdiff]
version = "0.2"

[dependencies.pbr]
version = "1"

[dependencies.prettytable-rs]
version = "0.10.0"
default-features = false

[dependencies.qr2term]
version = "0.2"
optional = true

[dependencies.rand]
version = "0.8"

[dependencies.regex]
version = "1.5"

[dependencies.rpassword]
version = "5"

[dependencies.serde]
version = "1"

[dependencies.serde_derive]
version = "1"

[dependencies.tar]
version = "0.4"
optional = true

[dependencies.tempfile]
version = "3"

[dependencies.toml]
version = "0.5"

[dependencies.urlshortener]
version = "3"
optional = true

[dependencies.version-compare]
version = "0.1"

[features]
archive = ["tar"]
clipboard = [
    "clip",
    "which",
]
clipboard-bin = ["clipboard"]
clipboard-crate = ["clipboard"]
crypto-openssl = ["ffsend-api/crypto-openssl"]
crypto-ring = ["ffsend-api/crypto-ring"]
default = [
    "archive",
    "clipboard",
    "crypto-ring",
    "history",
    "infer-command",
    "qrcode",
    "send3",
    "urlshorten",
]
history = []
infer-command = []
no-color = ["colored/no-color"]
qrcode = ["qr2term"]
send2 = ["ffsend-api/send2"]
send3 = ["ffsend-api/send3"]
urlshorten = ["urlshortener"]

[target.'cfg(any(target_os = "linux", target_os = "freebsd", target_os = "dragonfly", target_os = "openbsd", target_os = "netbsd"))'.dependencies.which]
version = "4.0"
optional = true

[target.'cfg(not(any(target_os = "linux", target_os = "freebsd", target_os = "dragonfly", target_os = "openbsd", target_os = "netbsd")))'.dependencies.clip]
version = "0.5"
optional = true
package = "clipboard"
