# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.83.0"
name = "nu"
version = "0.103.0"
authors = ["The Nushell Project Developers"]
build = "scripts/build.rs"
exclude = ["images"]
autolib = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
default-run = "nu"
description = "A new type of shell"
homepage = "https://www.nushell.sh"
documentation = "https://www.nushell.sh/book/"
readme = "README.md"
license = "MIT"
repository = "https://github.com/nushell/nushell"

[package.metadata.binstall]
pkg-fmt = "tgz"
pkg-url = "{ repo }/releases/download/{ version }/{ name }-{ version }-{ target }.{ archive-format }"

[package.metadata.binstall.overrides.x86_64-pc-windows-msvc]
pkg-fmt = "zip"

[features]
default = [
    "plugin",
    "trash-support",
    "sqlite",
]
plugin = [
    "nu-cmd-plugin",
    "nu-plugin-engine",
    "nu-cli/plugin",
    "nu-cmd-lang/plugin",
    "nu-command/plugin",
    "nu-engine/plugin",
    "nu-engine/plugin",
    "nu-parser/plugin",
    "nu-protocol/plugin",
]
sqlite = [
    "nu-command/sqlite",
    "nu-cmd-lang/sqlite",
    "nu-std/sqlite",
]
stable = ["default"]
static-link-openssl = [
    "dep:openssl",
    "nu-cmd-lang/static-link-openssl",
]
system-clipboard = [
    "reedline/system_clipboard",
    "nu-cli/system-clipboard",
    "nu-cmd-lang/system-clipboard",
]
trash-support = [
    "nu-command/trash-support",
    "nu-cmd-lang/trash-support",
]

[[bin]]
name = "nu"
path = "src/main.rs"
bench = false

[[test]]
name = "main"
path = "tests/main.rs"

[[bench]]
name = "benchmarks"
path = "benches/benchmarks.rs"
harness = false

[dependencies.crossterm]
version = "0.28.1"

[dependencies.ctrlc]
version = "3.4"

[dependencies.dirs]
version = "5.0"

[dependencies.log]
version = "0.4"

[dependencies.miette]
version = "7.5"
features = [
    "fancy-no-backtrace",
    "fancy",
]

[dependencies.multipart-rs]
version = "0.1.13"

[dependencies.nu-cli]
version = "0.103.0"

[dependencies.nu-cmd-base]
version = "0.103.0"

[dependencies.nu-cmd-extra]
version = "0.103.0"

[dependencies.nu-cmd-lang]
version = "0.103.0"

[dependencies.nu-cmd-plugin]
version = "0.103.0"
optional = true

[dependencies.nu-command]
version = "0.103.0"

[dependencies.nu-engine]
version = "0.103.0"

[dependencies.nu-explore]
version = "0.103.0"

[dependencies.nu-lsp]
version = "0.103.0"

[dependencies.nu-parser]
version = "0.103.0"

[dependencies.nu-path]
version = "0.103.0"

[dependencies.nu-plugin-engine]
version = "0.103.0"
optional = true

[dependencies.nu-protocol]
version = "0.103.0"

[dependencies.nu-std]
version = "0.103.0"

[dependencies.nu-system]
version = "0.103.0"

[dependencies.nu-utils]
version = "0.103.0"

[dependencies.reedline]
version = "0.39.0"
features = [
    "bashisms",
    "sqlite",
]

[dependencies.serde_json]
version = "1.0"

[dependencies.simplelog]
version = "0.12"

[dependencies.time]
version = "0.3"

[dev-dependencies.assert_cmd]
version = "2.0"

[dev-dependencies.dirs]
version = "5.0"

[dev-dependencies.fancy-regex]
version = "0.14"

[dev-dependencies.nu-plugin-core]
version = "0.103.0"

[dev-dependencies.nu-plugin-protocol]
version = "0.103.0"

[dev-dependencies.nu-test-support]
version = "0.103.0"

[dev-dependencies.pretty_assertions]
version = "1.4"

[dev-dependencies.rstest]
version = "0.23"
default-features = false

[dev-dependencies.serial_test]
version = "3.2"

[dev-dependencies.tango-bench]
version = "0.6"

[dev-dependencies.tempfile]
version = "3.15"

[target.'cfg(not(target_os = "windows"))'.dependencies.openssl]
version = "0.10"
features = ["vendored"]
optional = true

[target.'cfg(target_family = "unix")'.dependencies.nix]
version = "0.29"
features = [
    "signal",
    "process",
    "fs",
    "term",
]
default-features = false

[target."cfg(windows)".build-dependencies.winresource]
version = "0.1"

[lints.clippy]
unchecked_duration_subtraction = "warn"

[profile.ci]
debug = 0
inherits = "dev"
strip = false

[profile.profiling]
debug = 2
inherits = "release"
strip = false

[profile.release]
opt-level = "s"
lto = "thin"
strip = "debuginfo"
