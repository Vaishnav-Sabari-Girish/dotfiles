# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
name = "dioxus-sdk"
version = "0.5.1"
authors = [
    "Jonathan Kelley",
    "Dioxus Labs",
    "ealmloff",
    "DogeDark",
    "marc2332",
]
build = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "Platform agnostic library for supercharging your productivity with Dioxus"
homepage = "https://dioxuslabs.com"
readme = "README.md"
keywords = [
    "dom",
    "gui",
    "dioxus",
    "standard",
    "hooks",
]
categories = [
    "multimedia",
    "os",
    "wasm",
]
license = "MIT"
repository = "https://github.com/DioxusLabs/dioxus-sdk/"

[package.metadata.docs.rs]
default-target = "x86_64-pc-windows-msvc"
features = ["desktop-testing"]
no-default-features = true

[lib]
name = "dioxus_sdk"
path = "src/lib.rs"

[dependencies.async-broadcast]
version = "0.5.1"
optional = true

[dependencies.cfg-if]
version = "1.0.0"

[dependencies.copypasta]
version = "0.8.2"
optional = true

[dependencies.dioxus]
version = "0.5"

[dependencies.dioxus-signals]
version = "0.5.0-alpha.2"
features = ["serialize"]
optional = true

[dependencies.futures]
version = "0.3.28"
features = ["std"]
optional = true

[dependencies.futures-util]
version = "0.3.28"
optional = true

[dependencies.notify-rust]
version = "4.8.0"
optional = true

[dependencies.once_cell]
version = "1.17.0"
optional = true

[dependencies.postcard]
version = "1.0.2"
features = ["use-std"]
optional = true

[dependencies.rustc-hash]
version = "1.1.0"
optional = true

[dependencies.serde]
version = "1.0.163"
optional = true

[dependencies.serde_json]
version = "1.0.96"
optional = true

[dependencies.tokio]
version = "1.33.0"
features = ["sync"]
optional = true

[dependencies.tracing]
version = "0.1.40"

[dependencies.unic-langid]
version = "0.9.1"
features = ["serde"]
optional = true

[dependencies.uuid]
version = "1.3.2"
optional = true

[dependencies.yazi]
version = "0.1.4"
optional = true

[features]
clipboard = ["dep:copypasta"]
color_scheme = [
    "web-sys/Window",
    "web-sys/MediaQueryList",
    "dep:wasm-bindgen",
    "dep:wasm-bindgen-futures",
]
desktop-testing = [
    "clipboard",
    "notifications",
    "geolocation",
    "utils",
    "i18n",
]
geolocation = [
    "dep:futures",
    "dep:futures-util",
    "windows/Foundation",
    "windows/Devices_Geolocation",
    "web-sys/Navigator",
    "web-sys/Geolocation",
    "web-sys/PositionOptions",
    "dep:wasm-bindgen",
]
i18n = [
    "dep:serde",
    "dep:serde_json",
    "dep:unic-langid",
]
notifications = ["dep:notify-rust"]
storage = [
    "dep:rustc-hash",
    "dep:postcard",
    "dep:once_cell",
    "dep:dioxus-signals",
    "dep:tokio",
    "dep:yazi",
    "web-sys/StorageEvent",
    "dep:serde",
    "dep:futures-util",
    "dep:wasm-bindgen",
    "dep:directories",
]
utils = [
    "dep:async-broadcast",
    "uuid/v4",
]
wasm-testing = [
    "geolocation",
    "color_scheme",
    "utils",
    "i18n",
]

[target.'cfg(not(target_arch = "wasm32"))'.dependencies.directories]
version = "4.0.1"
optional = true

[target.'cfg(target_family = "wasm")'.dependencies.js-sys]
version = "0.3.62"

[target.'cfg(target_family = "wasm")'.dependencies.uuid]
version = "1.3.2"
features = ["js"]

[target.'cfg(target_family = "wasm")'.dependencies.wasm-bindgen]
version = "0.2.87"
optional = true

[target.'cfg(target_family = "wasm")'.dependencies.wasm-bindgen-futures]
version = "0.4.35"
optional = true

[target.'cfg(target_family = "wasm")'.dependencies.web-sys]
version = "0.3.60"
optional = true

[target."cfg(windows)".dependencies.windows]
version = "0.48.0"
optional = true
